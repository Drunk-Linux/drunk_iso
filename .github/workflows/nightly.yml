name: Nightly ISO ( AMD64 )

on:
    schedule:
        - cron: '0 0 * * *'
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - name: Clean up workflow env
      run: |
        # Free up space ( for this workflow )
        sudo apt purge -yq $(dpkg -l | grep '^ii' | awk '{ print $2 }' | grep -P '(cabal-|dotnet-|ghc-|libmono|php)') \
        liblldb-6.0 libllvm6.0:amd64 mono-runtime-common monodoc-manual powershell ruby
        
        sudo apt autoremove -yq

        sudo rm -rf /opt/hostedtoolcache /usr/local /usr/share/dotnet /usr/share/swift
        
    - name: prepare build env
      run: |
        # Basics
        # Clone and install required deps
        mkdir -p ~/DRUNK
        cd ~/DRUNK
        git clone https://git.it-kuny.ch/drunk/setup.git setup --depth=10
        git clone https://git.it-kuny.ch/drunk/drunk-pkgbuild.git -b sober pkgbuild --depth=50
        ln -sf setup/drunk.sh drunk

        # Now prepare drunk build env
        # As were running in ubuntu env then we need to bypass normal checks of script
        touch setup/checks/is_checked
        
    - name: Setup docker
      run: |
        cd ~/DRUNK
        export P_ROOT=$(pwd)

        # Pull drunk docker image and make new container of it
        sudo docker pull hilledkinged/drunk:latest

        docker container create \
        --name work01 \
        --volume $P_ROOT:/home/developer/DRUNK \
        --tty \
        --privileged \
        --device=/dev/loop-control:/dev/loop-control \
        --device=/dev/loop0:/dev/loop0 \
        hilledkinged/drunk /bin/bash

        sleep 1
        sudo docker start work01 >/dev/null
        sleep 1

        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "rm -rf /var/lib/bottle/sync/*"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "useradd developer -m -g wheel"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bash -c /home/developer/DRUNK/setup/docker/developer.sh"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "cp -f /home/developer/DRUNK/setup/docker/bottle.conf /etc/bottle.conf"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bottle -Syu --needed --noconfirm --disable-download-timeout"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bash -c /home/developer/DRUNK/setup/docker/developer.sh"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bottle --needed --noconfirm --disable-download-timeout -Sy sudo nano mpfr mpc base-devel m4 git libisoburn dialog syslinux drunk-install-scripts linux linux-firmware"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bash -c /home/developer/DRUNK/setup/docker/fix_sudo.sh"
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bash -c /home/developer/DRUNK/setup/docker/locale.sh"
        
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "chown -R developer /home/developer/DRUNK"


        # Reinstall linux pkg so whe have modules back as needed
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 /bin/bash -c "bottle --noconfirm --disable-download-timeout -Sy linux linux-firmware"
        
    - name: Build ISO
      run: |
        # Build the packages in docker env
        sudo docker exec --tty -e PATH=/bin:/sbin:/usr/bin:/usr/sbin work01 su developer -c "cd ~/DRUNK && ./drunk --mkiso-clean-cli"

    - name: Upload iso
      uses: actions/upload-artifact@v3
      with:
        path: ~/DRUNK/drunk.iso
